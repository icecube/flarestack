# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:

  pull_request:

  # run the pipeline on the 0th minute of the 0th hour of day 1 and 15 every month
  schedule:
    - cron: '0 0 1,15 * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Specify the python versions to test
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Set up the python versions
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

     # Setting up dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          python -m poetry install 

      # Runs a set of commands using the runners shell
      - name: Test the code
        run: |
          poetry run coverage run --concurrency=multiprocessing -m unittest discover tests/
          poetry run coverage combine

      - name: Run Coveralls
        if: ${{ success() }}
        run: |
          poetry run coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Echo tag name
        run: echo "Tag is ${{ github.ref }}, Deploy is ${{ startsWith(github.ref, 'refs/tags/') && matrix.python-version == 3.9}}"

      - name: Build a binary wheel and a source tarball
        run: python -m poetry build

      - name: Publish distribution ðŸ“¦ to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') && success() && matrix.python-version == 3.9}}
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: poetry publish
